// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username String    @id @db.VarChar(100)
  name     String    @db.VarChar(100)
  password String    @db.VarChar(100)
  isAdmin  Role?     @default(REGULER)
  email    String    @unique @db.VarChar(100)
  phone    String?   @db.VarChar(50)
  reviews  Reviews[]

  @@map("user")
}

enum Role {
  ADMIN
  REGULER
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(32)
  movies Movie[]

  @@map("genre")
}

model Movie {
  id          Int       @id @default(autoincrement())
  title       String    @unique @db.VarChar(50)
  description String    @db.VarChar(200)
  image       String    @db.VarChar(100)
  genres      Genre[]
  casts       String[]
  year        Int
  uploadAt    DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reviews     Reviews[]
}

model Reviews {
  id        Int      @id @default(autoincrement())
  userName  String   @unique
  user      User     @relation(fields: [userName], references: [username])
  rating    Int?
  comment   String   @db.VarChar(300)
  movieId   Int?
  movies    Movie?   @relation(fields: [movieId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
